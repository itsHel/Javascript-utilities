#php
	echo substr($string, 0, -3);
	
	<?php header("HTTP/1.0 418 I'm A Teapot"); die;?>			// custom http response

	I found that $_POST and $_GET don't work well with Fetch API. You have to use php://input to get all the data sent to the server.
	file_get_contents('php://input')

	$start = microtime(true); 
	$end = (microtime(true) - $start);
	echo "elapsed time: $end";
	
	If you must store your configuration files in the document root, name the files with a .php extension
		
	create pepper in file for full security ?

	
$(window).on("click", "#myelement", function(){
    // Will work on dynamically added elements!
});

"keypress"	- not registering esc, enter, etc

#cors servers
	- https://thingproxy.freeboard.io/fetch/https://
	
#date
	new Date().getTime()										! 1620732518800
	new Date().toLocaleString("sv")								! "2021-05-26 15:46:09"
	
#for
	for(const property in object)
	
#JSON.parse(window.localStorage["buttons"] || "[]");

specifiedElement.contains(event.target);

this.style.setProperty( 'border', 'none', 'important' );

$(".modal.js-product-images-modal").on('transitionend webkitTransitionEnd oTransitionEnd', function(){});

window.navigator.userAgent.match(/MSIE|Trident/)

document.activeElement

$0.scrollHeight			// Real height pri max-height:0; nebo height:0; returns 0 for display:none

pageDiv.insertAdjacentHTML('beforeend', myCanvas);

$(content).hide().appendTo("body").css({});

document.designMode = "on";

#animate after display:block
	$("#reg-content").css({display: "none"});
	$("#login-content").css({display: "block"});
	$("#login-content")[0].clientWidth;
	$("#login-content").addClass("content-show").siblings().removeClass("content-show");
	
	
element.addEventListener( action, function name () {
    element.removeEventListener( action, name, capture );
}, capture );

<input id=link-expiration placeholder="Expiration" type="search" autocomplete="off">
<span class="material-icons-outlined">cruelty_free</span>

font-display: fallback;
 

element.style.left = left; // triggers reflow
element.style.top = top; // triggers reflow
element.style.cssText += "left: " + left + "px; top: " + top + "px;"; // triggers reflow once

for loops that force layout & change the DOM are the worst, avoid them.

// Better performance when hidden outside of For
search.addEventListener('keyup', function() {
    const nodesToHide = [];
    const nodesToShow = [];
    for (const node of nodes)
        if (node.innerText.toLowerCase().includes(this.value.toLowerCase()))
            nodesToShow.push(node);
        else
            nodesToHide.push(node);

    nodesToHide.forEach(node => node.classList.add('hidden'));
    nodesToShow.forEach(node => node.classList.remove('hidden'));
});

let t0 = performance.now();
let t1 = performance.now();
console.log("Call to do Something took " + (t1 - t0) + " milliseconds.");

https://www.computerhope.com/htmcolor.htm

const $ = document.querySelectorAll.bind(document);

window.getSelection().selectAllChildren(footer);

const blob = await new Promise(resolve => el.toBlob(resolve));

[1, 2, 3].map(x => x <= 2);


function createFormData(formData, key = "", data) {
    if (data === Object(data) || Array.isArray(data)) {
        for (var i in data) {
            createFormData(formData, key + '[' + i + ']', data[i]);
        }
    } else {
        formData.append(key, data);
    }
}

Usage example:
	var data = {a: '1', b: 2, c: {d: '3'}};
	var formData = new FormData();
	createFormData(formData, 'data', data);
	
https://ritwickdey.github.io/

https://gist.github.com/niksumeiko/360164708c3b326bd1c8		disable autofill/autocomplete
